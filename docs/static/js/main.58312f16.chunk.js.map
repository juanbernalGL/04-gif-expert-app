{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","title","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAY9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAIC,iBACDJ,EAAWK,OAAS,IACnBP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACvCL,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAAU,SAACN,GAAD,OAASF,EAAcE,EAAIO,OAAOF,a,8BCpB/CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDAEwBC,UAAUH,GAFlC,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,IAClCY,MAAOJ,EAAII,UAGfC,QAAQC,IAAIR,GAZS,kBAadA,GAbc,4CAAH,sDCYLS,EAVK,SAAC,GAAuB,EAArBN,GAAsB,IAAlBG,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IAE9B,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKN,IACpB,4BAAIA,QC2BDO,EA5BC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECHN,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDV2BK,CAAc5B,GAAlCY,EAFkB,EAExBL,KAAce,EAFU,EAEVA,QAItB,OAFAP,QAAQC,IAAIJ,EAAQU,GAGlB,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IACjDsB,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SACKN,EAAOH,KAAI,SAAAC,GACV,OACE,wBAAC,EAAD,2BACKA,GADL,IAEAmB,IAAKnB,EAAIC,eEaNmB,EA7BM,SAAAC,GAAU,IAAD,EACU5C,mBAAS,CAAC,cADpB,mBACnB6C,EADmB,KACP9C,EADO,KAQ1B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BACM8C,EAAWvB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAASA,SAAWA,GAAgBA,Y,MCfxDiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.58312f16.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        if(inputValue.length > 2){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={(evt) => setInputValue(evt.target.value)}\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n\n}","export const getGifs = async (category) => {\n  const url =\n    `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=8vqqD5xcl8LaDTNGqIue1jw3QfsARKft`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      url: img.images?.downsized_medium.url,\n      title: img.title,\n    };\n  });\n  console.log(gifs);\n  return gifs;\n};","import React from 'react'\n\nconst GifGridItem = ( {id, title, url} ) => {\n    // console.log( props );\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} ></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\n\nconst GifGrid = ({ category }) => {\n\n  const { data: images, loading } = useFetchGifs( category );\n\n  console.log(images, loading);\n\n  return (\n    <>\n    <h4 className=\"animate__animated animate__fadeIn\">{category}</h4>\n    { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> } \n    <div className=\"card-grid\">\n        {images.map(img  => {\n          return (\n            <GifGridItem  \n            { ...img } \n            key={img.id}/>            \n          );\n        })}\n      \n    </div>\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n// import PropTypes from 'prop-types'\n\nconst GifExpertApp = props => {\n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handleAdd = () => {\n    //     // setCategories( [...categories, 'Ranma 1/2'] );\n    //     setCategories( cats => [...cats, 'Ranma 1/2'] );\n    // }\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            \n            {/* <button onClick={handleAdd}>Agregar</button> */}\n            <ol>\n                { categories.map( category => \n                    <GifGrid category={ category} key={ category }/>\n                ) }\n            </ol>\n            \n        </>\n    )\n}\n\nGifExpertApp.propTypes = {\n\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}